/*
 * Copyright 2011-present Greg Shrago
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
  id 'org.jetbrains.intellij' version "$ijpVersion"
  id 'maven-publish'
}

version = "$pluginVersion"
defaultTasks 'clean', 'artifacts', 'test'

apply plugin: 'java'
sourceCompatibility = javaVersion
targetCompatibility = javaVersion

repositories {
  mavenCentral()
//   maven { url 'https://www.jitpack.io' }
//   maven { url "https://cache-redirector.jetbrains.com/intellij-dependencies" }
}

dependencies {
  compileOnly 'org.jetbrains:annotations:21.0.1'
}

sourceSets {
  main {
    java.srcDirs 'src', 'gen'
    resources.srcDirs 'resources'
  }
  test {
    java.srcDir 'tests'
  }
}
// def bnfFiles = files('grammars/Grammar.bnf', 'grammars/JFlex.bnf')
// configurations {
//   GrammarPlugin {
//     exclude group: 'com.jetbrains.rd'
//     exclude group: 'org.jetbrains.marketplace'
//     exclude group: 'org.roaringbitmap'
//     exclude group: 'org.jetbrains.plugins'
//     exclude module: 'idea'
//     exclude module: 'ant'
//   }
// }
// dependencies {
//   GrammarPlugin 'com.github.JetBrains:Grammar-Kit:51a409d'
//   GrammarPlugin "com.jetbrains.intellij.platform:lang-impl:$ideaVersion"
//   GrammarPlugin 'org.jetbrains.intellij.deps:asm-all:7.0.1'
// }
// compileJava {
//   inputs.files bnfFiles
//   options.annotationProcessorPath = configurations.GrammarPlugin
//   options.compilerArgs
//     << "-Xplugin:GrammarPlugin ${bnfFiles.asPath}"
//     << "-s" << files('out/generated').asPath
//   options.compilerArgs
//     << "--add-exports" << "jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED"
//     << "--add-exports" << "jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED"
//     << "--add-exports" << "jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED"
//     << "--add-exports" << "jdk.compiler/com.sun.tools.javac.main=ALL-UNNAMED"
//     << "--add-exports" << "jdk.compiler/com.sun.tools.javac.processing=ALL-UNNAMED"
//     << "--add-exports" << "jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED"
//     << "--add-exports" << "jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED"
//// for Java16 and up
//   options.fork=true
//   options.forkOptions.jvmArgs
//     << "--add-exports" << "jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED"
//     << "--add-exports" << "jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED"
//     << "--add-exports" << "jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED"
//     << "--add-exports" << "jdk.compiler/com.sun.tools.javac.main=ALL-UNNAMED"
//     << "--add-exports" << "jdk.compiler/com.sun.tools.javac.processing=ALL-UNNAMED"
//     << "--add-exports" << "jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED"
//     << "--add-exports" << "jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED"
// }
apply plugin: 'idea'
idea.module {
  generatedSourceDirs += file('gen')
}
apply plugin: 'org.jetbrains.intellij'
intellij {
  version = ideaVersion
  type = 'IU'
  plugins = ['uml', 'java']
  updateSinceUntilBuild = false
}
buildSearchableOptions.enabled = false

test {
  useJUnit {}
  include '**/BnfTestSuite.class'
  scanForTestClasses false
  ignoreFailures true
}

apply from: 'artifacts.gradle'
apply plugin: 'maven-publish'
publishing {
  publications {
    grammarKitJar(MavenPublication) {
      groupId = 'com.github.JetBrains'
      artifactId = 'grammar-kit'
      version = "$version"
      artifact buildGrammar_kit_jar
    }
  }
  repositories {
    mavenLocal()
  }
}
